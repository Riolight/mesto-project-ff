{"version":3,"file":"main.js","mappings":"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","sources":["webpack://mesto-project-ff/webpack/bootstrap","webpack://mesto-project-ff/webpack/runtime/define property getters","webpack://mesto-project-ff/webpack/runtime/hasOwnProperty shorthand","webpack://mesto-project-ff/./src/components/card.js","webpack://mesto-project-ff/./src/components/modal.js","webpack://mesto-project-ff/./src/components/validation.js","webpack://mesto-project-ff/./src/components/api.js","webpack://mesto-project-ff/./src/index.js"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","import { cardTemplate } from '../index.js';\nexport { createCard };\n\n// @todo: Функция создания карточки\nconst createCard = ({\n  userId,\n  dataCard,\n  confirmDeleteCard,\n  confirmLikeCard,\n  openPopupImage,\n}) => {\n  const cardElement = cardTemplate\n    .querySelector('.places__item')\n    .cloneNode(true);\n  const cardImage = cardElement.querySelector('.card__image');\n  const deleteButton = cardElement.querySelector('.card__delete-button');\n  const likeButton = cardElement.querySelector('.card__like-button');\n  const counterLikes = cardElement.querySelector('.card__counter-like');\n\n  cardElement.id = dataCard['_id'];\n\n  cardElement.querySelector('.card__title').textContent = dataCard.name;\n  cardImage.src = dataCard.link;\n  cardImage.alt = dataCard.name;\n  counterLikes.textContent = dataCard.likes.length;\n\n  const isLiked = dataCard.likes.some((like) => like._id === userId);\n  if (isLiked) {\n    likeButton.classList.add('card__like-button_is-active');\n  }\n\n  if (dataCard.owner._id === userId) {\n    deleteButton.addEventListener('click', (evt) => {\n      confirmDeleteCard(dataCard._id);\n    });\n  } else {\n    deleteButton.remove();\n  }\n\n  likeButton.addEventListener('click', (evt) => {\n    confirmLikeCard(evt, dataCard._id, counterLikes);\n  });\n\n  cardImage.addEventListener('click', () => {\n    openPopupImage(dataCard.name, dataCard.link);\n  });\n  return cardElement;\n};\n\n","export { openPopup, closePopup };\n\n// @todo: Открытие попапа\nfunction openPopup(popup) {\n  popup.classList.add('popup_is-opened');\n  document.body.style.overflow = 'hidden';\n  document.addEventListener('keydown', closeEscPopup);\n}\n\n// @todo: Закрытие попапа\nfunction closePopup(popup) {\n  popup.classList.remove('popup_is-opened');\n  document.body.style.overflow = '';\n  document.removeEventListener('keydown', closeEscPopup);\n}\n\n// @todo: Закрытие попапа ESC\nfunction closeEscPopup(evt) {\n  if (evt.code === 'Escape') {\n    const modal = document.querySelector('.popup_is-opened');\n    closePopup(modal);\n  }\n}\n","export { enableValidation, clearValidation };\n\n// @todo: Показать ошибки\nconst showInputError = (\n  formElement,\n  inputElement,\n  errorMessage,\n  configValidation\n) => {\n  const errorElement = formElement.querySelector(`.${inputElement.id}-error`);\n  inputElement.classList.add(configValidation.inputErrorClass);\n  if (inputElement.validity.valueMissing) {\n    errorElement.textContent = 'Вы пропустили это поле';\n  } else {\n    errorElement.textContent = errorMessage;\n  }\n  errorElement.classList.add(configValidation.errorClass);\n};\n\n// @todo: Спрятать ошибки\nconst hideInputError = (formElement, inputElement, configValidation) => {\n  const errorElement = formElement.querySelector(`.${inputElement.id}-error`);\n  inputElement.classList.remove(configValidation.inputErrorClass);\n  errorElement.classList.remove(configValidation.errorClass);\n  errorElement.textContent = '';\n};\n\n// @todo: Валидация формы\nconst checkInputValidity = (formElement, inputElement, configValidation) => {\n  if (inputElement.validity.patternMismatch) {\n    inputElement.setCustomValidity(inputElement.dataset.errorMessage);\n  } else {\n    inputElement.setCustomValidity('');\n  }\n\n  if (!inputElement.validity.valid) {\n    showInputError(\n      formElement,\n      inputElement,\n      inputElement.validationMessage,\n      configValidation\n    );\n  } else {\n    hideInputError(formElement, inputElement, configValidation);\n  }\n};\n\nconst hasInvalidInput = (inputList) => {\n  return inputList.some((inputElement) => {\n    return !inputElement.validity.valid;\n  });\n};\n\nconst toggleButtonState = (inputList, buttonElement, configValidation) => {\n  if (hasInvalidInput(inputList)) {\n    buttonElement.classList.add(configValidation.inactiveButtonClass);\n    buttonElement.setAttribute('disabled', true);\n  } else {\n    buttonElement.classList.remove(configValidation.inactiveButtonClass);\n    buttonElement.removeAttribute('disabled', false);\n  }\n};\n\nconst setEventListeners = (formElement, configValidation) => {\n  const inputList = Array.from(\n    formElement.querySelectorAll(configValidation.inputSelector)\n  );\n  const buttonElement = formElement.querySelector(\n    configValidation.submitButtonSelector\n  );\n  toggleButtonState(inputList, buttonElement, configValidation);\n  inputList.forEach((inputElement) => {\n    inputElement.addEventListener('input', function () {\n      checkInputValidity(formElement, inputElement, configValidation);\n      toggleButtonState(inputList, buttonElement, configValidation);\n    });\n  });\n};\n\nconst enableValidation = (configValidation) => {\n  const inputForm = Array.from(\n    document.querySelectorAll(configValidation.formSelector)\n  );\n  inputForm.forEach((formElement) => {\n    formElement.addEventListener('submit', (evt) => {\n      evt.preventDefault();\n    });\n    setEventListeners(formElement, configValidation);\n  });\n};\n\n// @todo: Очистка валидации\nconst clearValidation = (formElement, configValidation) => {\n  const inputList = Array.from(\n    formElement.querySelectorAll(configValidation.inputSelector)\n  );\n  const buttonElement = formElement.querySelector(\n    configValidation.submitButtonSelector\n  );\n\n  inputList.textContent = '';\n\n  toggleButtonState(\n    inputList,\n    buttonElement,\n    configValidation.inactiveButtonClass\n  );\n  \n  inputList.forEach((inputElement) => {\n    hideInputError(\n      formElement,\n      inputElement,\n      configValidation.inputErrorClass,\n      configValidation.errorClass\n    );\n    inputElement.setCustomValidity('');\n    inputElement.classList.remove(configValidation.inputErrorClass);\n  });\n};\n","export {\n  getUserInfo,\n  getInitialCards,\n  updateUserInfo,\n  updateUserAvatar,\n  postAddNewCard,\n  handleDeleteCard,\n  handleCardLike,\n  deleteLikeCard,\n};\n\nconst config = {\n  baseUrl: 'https://nomoreparties.co/v1/wff-cohort-18',\n  headers: {\n    authorization: 'bd5bec3d-633a-49cb-9f54-22ded73cd96e',\n    'Content-Type': 'application/json',\n  },\n};\n\nconst handleRes = (res) => {\n  if (res.ok) {\n    return res.json();\n  }\n  return Promise.reject(`Ошибка: ${res.status}`);\n};\n\n// GET-запрос информации о пользователе\nconst getUserInfo = () => {\n  return fetch(`${config.baseUrl}/users/me`, {\n    headers: config.headers,\n  }).then(handleRes);\n};\n\n// GET-запрос вывода карточек на страницу\nconst getInitialCards = () => {\n  return fetch(`${config.baseUrl}/cards`, {\n    headers: config.headers,\n  }).then(handleRes);\n};\n\n// PATCH-запрос редактирования карточки\nconst updateUserInfo = (userInfo) => {\n  return fetch(`${config.baseUrl}/users/me`, {\n    method: 'PATCH',\n    headers: config.headers,\n    body: JSON.stringify({\n      name: userInfo.name,\n      about: userInfo.about,\n    }),\n  }).then(handleRes);\n};\n\n// PATCH-запрос обновления аватара\nconst updateUserAvatar = (link) => {\n  return fetch(`${config.baseUrl}/users/me/avatar`, {\n    method: 'PATCH',\n    headers: config.headers,\n    body: JSON.stringify({\n      avatar: link.link,\n    }),\n  }).then(handleRes);\n};\n\n// POST-запрос добавления карточки\nconst postAddNewCard = (dataCard) => {\n  return fetch(`${config.baseUrl}/cards`, {\n    method: 'POST',\n    headers: config.headers,\n    body: JSON.stringify(dataCard),\n  }).then(handleRes);\n};\n\n// DELETE-запрос удаления карточки\nconst handleDeleteCard = (cardId) => {\n  return fetch(`${config.baseUrl}/cards/${cardId}`, {\n    method: 'DELETE',\n    headers: config.headers,\n  }).then(handleRes);\n};\n\n// PUT-запрос добавления лайка\nconst handleCardLike = (cardId) => {\n  return fetch(`${config.baseUrl}/cards/likes/${cardId}`, {\n    method: 'PUT',\n    headers: config.headers,\n  }).then(handleRes);\n};\n\n// DELETE-запрос удаления лайка\nconst deleteLikeCard = (cardId) => {\n  return fetch(`${config.baseUrl}/cards/likes/${cardId}`, {\n    method: 'DELETE',\n    headers: config.headers,\n  }).then(handleRes);\n};\n","import './pages/index.css'; // импорт главного файла стилей\nimport { createCard } from './components/card.js';\nimport { openPopup, closePopup } from './components/modal.js';\nimport { enableValidation, clearValidation } from './components/validation.js';\nimport {\n  getUserInfo,\n  getInitialCards,\n  updateUserInfo,\n  postAddNewCard,\n  handleDeleteCard,\n  updateUserAvatar,\n  handleCardLike,\n  deleteLikeCard,\n} from './components/api.js';\n\nexport { cardTemplate };\n\n// @todo: Темплейт карточки\nconst cardTemplate = document.querySelector('#card-template').content;\n\n// @todo: DOM узлы\nconst content = document.querySelector('.content');\nconst cardsContainer = content.querySelector('.places__list');\n\n// @todo: DOM узлы формы\nconst profileTitle = document.querySelector('.profile__title');\nconst profileDescription = document.querySelector('.profile__description');\nconst profileImage = document.querySelector('.profile__image');\nconst modalAvatar = document.querySelector('.popup_type_avatar');\n\n// @todo: DOM узлы попап\nconst popups = document.querySelectorAll('.popup');\nconst popupEdit = document.querySelector('.popup_type_edit');\nconst profileForm = popupEdit.querySelector('.popup__form');\nconst nameInput = profileForm.querySelector('.popup__input_type_name');\nconst jobInput = profileForm.querySelector('.popup__input_type_description');\n\nconst popupCard = document.querySelector('.popup_type_new-card');\nconst newPlaceForm = popupCard.querySelector('.popup__form');\nconst nameDataCard = newPlaceForm.querySelector('.popup__input_type_card-name');\nconst linkDataCard = newPlaceForm.querySelector('.popup__input_type_url');\n\nconst popupImage = document.querySelector('.popup_type_image');\nconst popupImg = document.querySelector('.popup__image');\nconst popupCaptionImg = document.querySelector('.popup__caption');\n\nconst editButton = document.querySelector('.profile__edit-button');\nconst addButton = document.querySelector('.profile__add-button');\n\nconst modalFormEditProfile = document.forms['edit-profile'];\nconst modalFormEditAvatar = document.forms['edit-avatar'];\n\nconst popupAlert = document.querySelector('.popup_type_alert');\nconst submitDeleteCard = popupAlert.querySelector('.popup__button-alert');\n\nlet userId;\n\n// @todo: Функция кнопки сохранения\nconst renderLoading = (isLoading, buttonElement) => {\n  if (isLoading) {\n    buttonElement.textContent = 'Сохранение...';\n  } else {\n    buttonElement.textContent = 'Сохранение';\n    buttonElement.classList.add(configValidation.inactiveButtonClass);\n    buttonElement.setAttribute('disabled', true);\n  }\n};\n\n// @todo: Функция добавление новой карточки\nnewPlaceForm.addEventListener('submit', (evt) => {\n  evt.preventDefault();\n  const buttonElement = evt.submitter;\n  renderLoading(true, buttonElement);\n  postAddNewCard({\n    name: nameDataCard.value,\n    link: linkDataCard.value,\n  })\n    .then((dataCard) => {\n      const cardElement = createCard({\n        userId,\n        dataCard,\n        confirmDeleteCard,\n        confirmLikeCard,\n        openPopupImage,\n      });\n      cardsContainer.prepend(cardElement);\n      newPlaceForm.reset();\n      closePopup(popupCard);\n    })\n    .catch((err) => {\n      console.log('ошибка добавления карточки:', err);\n    })\n    .finally(() => {\n      renderLoading(false, buttonElement);\n    });\n});\n\n// @todo: Функция лайка\nconst confirmLikeCard = (evt, cardId, counterLikes) => {\n  if (evt.target.classList.contains('card__like-button_is-active')) {\n    deleteLikeCard(cardId)\n      .then((updatedCard) => {\n        evt.target.classList.remove('card__like-button_is-active');\n        counterLikes.textContent = updatedCard.likes.length;\n      })\n      .catch((err) => {\n        console.log('ошибка удаления лайка:', err);\n      });\n  } else {\n    handleCardLike(cardId)\n      .then((updatedCard) => {\n        evt.target.classList.add('card__like-button_is-active');\n        counterLikes.textContent = updatedCard.likes.length;\n      })\n      .catch((err) => {\n        console.log('ошибка добавления лайка:', err);\n      });\n  }\n};\n\n// @todo: Функция удаление карточки\nconst confirmDeleteCard = (cardId) => {\n  openPopup(popupAlert);\n  popupAlert.dataset.cardId = cardId;\n};\n\nconst handleConfirmDeleteCard = () => {\n  handleDeleteCard(popupAlert.dataset.cardId)\n    .then((result) => {\n      console.log(result);\n      const deleteCard = document.getElementById(popupAlert.dataset.cardId);\n      deleteCard.remove();\n      closePopup(popupAlert);\n    })\n    .catch((err) => {\n      console.log('ошибка удаления карточки:', err);\n    });\n};\n\n// @todo: Функция открытие попапа картинки\nconst openPopupImage = (inputName, inputLink) => {\n  popupImg.src = inputLink;\n  popupImg.alt = inputName;\n  popupCaptionImg.textContent = inputName;\n  openPopup(popupImage);\n};\n\n// @todo: Функция редактирование профиля\nprofileForm.addEventListener('submit', (evt) => {\n  evt.preventDefault();\n  const buttonElement = evt.submitter;\n  renderLoading(true, buttonElement);\n  updateUserInfo({\n    name: modalFormEditProfile.name.value,\n    about: modalFormEditProfile.description.value,\n  })\n    .then((userInfo) => {\n      profileTitle.textContent = userInfo.name;\n      profileDescription.textContent = userInfo.about;\n      closePopup(popupEdit);\n    })\n    .catch((err) => {\n      console.log('ошибка изменения данных пользователя:', err);\n    })\n    .finally(() => {\n      renderLoading(false, buttonElement);\n    });\n});\n\n// @todo: Функция обновления аватара\nconst handlerAvatarFormSubmit = (evt) => {\n  evt.preventDefault();\n  const buttonElement = evt.submitter;\n  renderLoading(true, buttonElement);\n  updateUserAvatar({\n    link: modalFormEditAvatar.link.value,\n  })\n    .then((userInfo) => {\n      profileImage.style.backgroundImage = `url(${userInfo.avatar})`;\n      closePopup(modalAvatar);\n    })\n    .catch((err) => {\n      console.log('ошибка добавления аватара:', err);\n    })\n    .finally(() => {\n      renderLoading(false, buttonElement);\n    });\n};\n\neditButton.addEventListener('click', () => {\n  nameInput.value = profileTitle.textContent;\n  jobInput.value = profileDescription.textContent;\n  openPopup(popupEdit);\n  clearValidation(profileForm, configValidation);\n});\n\naddButton.addEventListener('click', () => {\n  newPlaceForm.reset();\n  openPopup(popupCard);\n  clearValidation(newPlaceForm, configValidation);\n});\n\nprofileImage.addEventListener('click', () => {\n  modalFormEditAvatar.reset();\n  clearValidation(modalFormEditAvatar, configValidation);\n  openPopup(modalAvatar);\n});\n\nsubmitDeleteCard.addEventListener('click', handleConfirmDeleteCard);\nmodalFormEditAvatar.addEventListener('submit', handlerAvatarFormSubmit);\n\n// @todo: Вывести карточки на страницу + информация пользователя\nPromise.all([getInitialCards(), getUserInfo()])\n  .then(([initialCards, userInfo]) => {\n    profileTitle.textContent = userInfo.name;\n    profileDescription.textContent = userInfo.about;\n    profileImage.style.backgroundImage = `url(${userInfo.avatar})`;\n    userId = userInfo._id;\n\n    initialCards.forEach((dataCard) => {\n      const cardElement = createCard({\n        userId,\n        dataCard,\n        confirmDeleteCard,\n        confirmLikeCard,\n        openPopupImage,\n      });\n      cardsContainer.append(cardElement);\n    });\n  })\n  .catch((err) => {\n    console.log('ошибка передачи карточки:', err);\n  });\n\n// @todo: Закрытие всех попапов по крестику и оверлею\npopups.forEach((popup) => {\n  popup.addEventListener('click', (evt) => {\n    if (evt.target === popup || evt.target.classList.contains('popup__close')) {\n      const modal = document.querySelector('.popup_is-opened');\n      closePopup(modal);\n    }\n  });\n});\n\nconst configValidation = {\n  formSelector: '.popup__form',\n  inputSelector: '.popup__input',\n  submitButtonSelector: '.popup__button',\n  errorVisible: '.popup__error_visible',\n  inputErrorVisible: '.popup__input_type_error',\n  inactiveButtonClass: 'popup__button_disabled',\n  inputErrorClass: 'popup__input_type_error',\n  errorClass: 'popup__error_visible',\n};\n\nenableValidation(configValidation);\n"],"names":["__webpack_require__","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","createCard","_ref","userId","dataCard","confirmDeleteCard","confirmLikeCard","openPopupImage","cardElement","cardTemplate","querySelector","cloneNode","cardImage","deleteButton","likeButton","counterLikes","id","textContent","name","src","link","alt","likes","length","some","like","_id","classList","add","owner","addEventListener","evt","remove","openPopup","popup","document","body","style","overflow","closeEscPopup","closePopup","removeEventListener","code","hideInputError","formElement","inputElement","configValidation","errorElement","concat","inputErrorClass","errorClass","toggleButtonState","inputList","buttonElement","validity","valid","hasInvalidInput","inactiveButtonClass","removeAttribute","setAttribute","clearValidation","Array","from","querySelectorAll","inputSelector","submitButtonSelector","forEach","setCustomValidity","config","baseUrl","headers","authorization","handleRes","res","ok","json","Promise","reject","status","content","cardsContainer","profileTitle","profileDescription","profileImage","modalAvatar","popups","popupEdit","profileForm","nameInput","jobInput","popupCard","newPlaceForm","nameDataCard","linkDataCard","popupImage","popupImg","popupCaptionImg","editButton","addButton","modalFormEditProfile","forms","modalFormEditAvatar","popupAlert","submitDeleteCard","renderLoading","isLoading","preventDefault","submitter","value","fetch","method","JSON","stringify","then","prepend","reset","catch","err","console","log","finally","cardId","target","contains","deleteLikeCard","updatedCard","handleCardLike","dataset","inputName","inputLink","userInfo","about","description","result","getElementById","avatar","backgroundImage","all","_ref2","initialCards","append","formSelector","errorVisible","inputErrorVisible","patternMismatch","errorMessage","valueMissing","showInputError","validationMessage","checkInputValidity","setEventListeners","enableValidation"],"sourceRoot":""}